name: Build and test the project

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  test:
    name: Test and push Sonar analysis
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Start MongoDB v6.0
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 6.0
          mongodb-replica-set: rs-test
      - name: Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify surefire-report:report --fail-never --no-transfer-progress
      - name: Publish Test Report
        uses: scacap/action-surefire-report@v1
        ## Skip cancelled()
        ## https://docs.github.com/en/actions/learn-github-actions/expressions#cancelled
        if: success() || failure()
        with:
          check_name: "Surefire tests report"
          report_paths: './**/surefire-reports/TEST-*.xml'
          commit: '${{ github.sha }}'
          fail_on_test_failures: true
      - name: Create report folder
        run: |
          set -e
          set -x
          # Crear la carpeta 'report' si no existe
          mkdir -p report
          
          # Crear una lista de módulos
          modules=()
          
          # Buscar todas las carpetas 'target/site' y copiar su contenido a 'report', renombrándolas con el nombre del módulo
          find . -type f -path '*/target/site/surefire-report.html' | while read -r report_file; do
          module=$(basename $(dirname $(dirname $(dirname "$report_file"))))
          modules+=("$module")
          mkdir -p "report/$module"
          cp -r "$(dirname "$report_file")"/* "report/$module/"
          done
          
          # Crear el archivo index.html en 'report'
          cat <<EOL > report/index.html
          <!DOCTYPE html>
          <html lang="en">
          <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Surefire Reports</title>
          <style>
              body {
              font-family: Arial, sans-serif;
              }
              #menu {
              float: left;
              width: 20%;
              background: #f4f4f4;
              padding: 15px;
              box-shadow: 0 0 10px rgba(0,0,0,0.1);
            }
              #content {
              margin-left: 22%;
              padding: 15px;
            }
              a {
              text-decoration: none;
              display: block;
              padding: 8px 16px;
              color: #333;
            }
              a:hover {
              background: #ddd;
            }
              </style>
              <script>
              function loadReport(module) {
              fetch(module + '/surefire-report.html')
              .then(response => response.text())
              .then(html => {
              document.getElementById('content').innerHTML = html;
            });
            }
          </script>
          </head>
          <body>
          <div id="menu">
          <h2>Surefire Reports</h2>
          <ul>
          EOL
          
          # Añadir las entradas del menú al archivo index.html
          for module in "${modules[@]}"; do
          echo "            <li><a href=\"#\" onclick=\"loadReport('$module')\">$module</a></li>" >> report/index.html
          done
          
          # Finalizar el archivo index.html
          cat <<EOL >> report/index.html
          </ul>
          </div>
          <div id="content">
          <h2>Seleccione un módulo del menú para ver el informe.</h2>
          </div>
          </body>
          </html>
          EOL          
          echo "Todos los archivos han sido copiados y el archivo index.html ha sido creado en la carpeta 'report'."
      - name: Upload Test Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: report
      - name: Publish Test Report
        uses: ./.github/workflows/publish-test-report-workflow.yml
        with:
          target_path: /var/www/html/reports/xetabase/java-common-libs/${{ github.ref_name }}/surefire-reports/
          content: report

