name: TEST Xetabase and publish report workflow

on:
  workflow_call:
    inputs:
      task:
        type: string
        required: true
      branch:
        type: string
        required: true
  workflow_dispatch:
    inputs:
      task:
        type: string
        description: 'Task ID to be tested.'
        required: true
      branch:
        type: string
        description: 'Branch of opencga-enterprise to be tested and built.'
        required: true
env:
  AZCOPY_SPA_CLIENT_SECRET: ${{ secrets.AZCOPY_SPA_CLIENT_SECRET }}
  AZCOPY_AUTO_LOGIN_TYPE: "SPN"
  AZCOPY_SPA_APPLICATION_ID: ${{ secrets.AZCOPY_SPA_APPLICATION_ID }}
  AZCOPY_TENANT_ID: ${{ secrets.AZCOPY_TENANT_ID }}

jobs:
  test:
    name: Execute JUnit and Jacoco tests
    runs-on: ubuntu-22.04
    steps:
      - name: Clone OpenCGA Enterprise branch '${{ github.event.inputs.branch }}'
        uses: actions/checkout@v4
        with:
          repository: zetta-genomics/opencga-enterprise
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.ZETTA_REPO_ACCESS_TOKEN }}
          path: opencga-enterprise
          fetch-depth: "10"
      - id: get_opencga_branch
        name: Get OpenCGA branch from 'pom.xml' property
        run: |
          pwd
          chmod +x ./opencga-enterprise/.github/workflows/scripts/xetabase-branch.sh
          opencga_branch=$(./opencga-enterprise/.github/workflows/scripts/xetabase-branch.sh ${{ github.event.inputs.task }})
          echo "opencga_branch=${opencga_branch}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          repository: opencb/opencga
          ref: ${{ steps.get_opencga_branch.outputs.opencga_branch }}
          path: opencga
          fetch-depth: '10'
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Install Samtools
        run: sudo apt-get install samtools python3-deeptools
      - name: Start MongoDB v6.0
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 6.0
          mongodb-replica-set: rs-test
      - name: K8s Tunnel MongoDB
        run: |
          wget https://dl.k8s.io/release/v1.28.2/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          echo "${{ secrets.AZURE_KUBE_CONFIG }}" > admin.conf
          ./kubectl -n cellbase-db port-forward services/cellbase-rs0-svc 27018:27017 --kubeconfig ./admin.conf &
      - name: Install Azure AZCOPY
        uses: kheiakiyama/install-azcopy-action@v1
        with:
          version: 'v10'
      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Run all OpenCB Junit tests, ie. java-common-libs, biodata, cellbase, opencga and opencga-enterprise
        run: |
          ln -s opencga opencga-enterprise/opencga-home
          cd opencga-enterprise
          ./build.sh -t -l runShortTests,runMediumTests,runLongTests -b -s -f -T ${{ github.event.inputs.task }} -c localhost:27018 -H hdp3.1
      - name: Upload reports results to Github
        uses: actions/upload-artifact@v4
        with:
          name: report-test
          path: /home/runner/work/testing-environment/testing-environment/opencga-enterprise/reports/test
      - name: Upload log
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: /home/runner/work/testing-environment/testing-environment/opencga-enterprise/build.log
      - name: Upload junit reports to a remote scp server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: opencga-enterprise/reports/test
          remote: /var/www/html/reports/xetabase/${{ github.event.inputs.task }}/
          host: ${{ secrets.SSH_TESTING_SERVER_HOST}}
          port: ${{ secrets.SSH_TESTING_SERVER_PORT}}
          username: ${{ secrets.SSH_TESTING_SERVER_USER }}
          password: ${{ secrets.SSH_TESTING_SERVER_PASSWORD }}
          concurrency: 2


