name: TEST Xetabase and publish report workflow

on:
  workflow_call:
    inputs:
      task:
        type: string
        required: true
      branch:
        type: string
        required: true
  workflow_dispatch:
    inputs:
      task:
        type: string
        description: 'Task ID to be tested.'
        required: true
      branch:
        type: string
        description: 'Branch of opencga-enterprise to be tested and built.'
        required: true

env:
  AZCOPY_AUTO_LOGIN_TYPE: "SPN"


jobs:
  test:
    name: Execute JUnit and Jacoco tests
    runs-on: ubuntu-22.04
    steps:
      - name: Retrieve secrets from Keeper
        id: ksecrets
        uses: Keeper-Security/ksm-action@master
        with:
          keeper-secret-config: ${{ secrets.KEEPER_SM_GH_OPENCB }}
          secrets: |
            AZCOPY_SPA_CLIENT_SECRET/field/Secret Value > env:AZCOPY_SPA_CLIENT_SECRET
            AZCOPY_SPA_APPLICATION_ID/field/Secret Value > env:AZCOPY_SPA_APPLICATION_ID
            AZCOPY_TENANT_ID/field/Secret Value > env:AZCOPY_TENANT_ID
            AZURE_KUBE_CONFIG/field/Secret Value > env:AZURE_KUBE_CONFIG
            DOCKER_HUB_USER/field/Secret Value > env:DOCKER_HUB_USER
            DOCKER_HUB_PASSWORD/field/Secret Value > env:DOCKER_HUB_PASSWORD
            SSH_TESTING_SERVER_HOST/field/Secret Value > env:SSH_TESTING_SERVER_HOST
            SSH_TESTING_SERVER_PORT/field/Secret Value > env:SSH_TESTING_SERVER_PORT
            SSH_TESTING_SERVER_USER/field/Secret Value > env:SSH_TESTING_SERVER_USER
            SSH_TESTING_SERVER_PASSWORD/field/Secret Value > env:SSH_TESTING_SERVER_PASSWORD
      - name: Log inputs
        run: |
          echo "__OpenCGA-enterprise branch:__ \"${{ inputs.branch }}\"" | tee -a $GITHUB_STEP_SUMMARY
          echo "__Task to test:__ \"${{ inputs.task }}\"" | tee -a $GITHUB_STEP_SUMMARY
      - name: Clone OpenCGA Enterprise branch '${{ inputs.branch }}'
        uses: actions/checkout@v4
        with:
          repository: zetta-genomics/opencga-enterprise
          ref: ${{ inputs.branch }}
          token: ${{ secrets.ZETTA_REPO_ACCESS_TOKEN }}
          path: opencga-enterprise
          fetch-depth: "10"
      - id: get_opencga_branch
        name: Get OpenCGA branch from 'pom.xml' property
        run: |
          pwd
          chmod +x ./opencga-enterprise/.github/workflows/scripts/xetabase-branch.sh
          opencga_branch=$(./opencga-enterprise/.github/workflows/scripts/xetabase-branch.sh ${{ inputs.task }})
          echo "opencga_branch=${opencga_branch}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
        with:
          repository: opencb/opencga
          ref: ${{ steps.get_opencga_branch.outputs.opencga_branch }}
          path: opencga
          fetch-depth: '10'
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Install Samtools
        run: sudo apt-get install samtools python3-deeptools
      - name: Start MongoDB v6.0
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 6.0
          mongodb-replica-set: rs-test
      - name: K8s Tunnel MongoDB
        run: |
          wget https://dl.k8s.io/release/v1.28.2/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          echo "${{ env.AZURE_KUBE_CONFIG }}" > admin.conf
          ./kubectl -n cellbase-db port-forward services/cellbase-rs0-svc 27018:27017 --kubeconfig ./admin.conf &
      - name: Install Azure AZCOPY
        uses: kheiakiyama/install-azcopy-action@v1
        with:
          version: 'v10'
      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}
      - name: Run all OpenCB Junit tests, ie. java-common-libs, biodata, cellbase, opencga and opencga-enterprise
        run: |
          pwd
          ls -lrtha 
          echo "------------------------------------"
          cd opencga-enterprise
          pwd
          ls -lrtha 
          echo "------------------------------------"
          ln -s ../opencga opencga-home
          echo "------------------------------------"
          ls -lrtha 
          #./build.sh -t -l runShortTests,runMediumTests,runLongTests -b -s -f -T ${{ inputs.task }} -c localhost:27018 -H hdp3.1
          ./build.sh -t -l runShortTests -b -s -f -T ${{ inputs.task }} -c localhost:27018 -H hdp3.1
      - name: Upload reports results to Github
        uses: actions/upload-artifact@v4
        with:
          name: report-test
          path: /home/runner/work/java-common-libs/java-common-libs/opencga-enterprise/reports/test
      - name: Upload log
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: /home/runner/work/java-common-libs/java-common-libs/opencga-enterprise/build.log
      - name: Upload junit reports to a remote scp server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: opencga-enterprise/reports/test
          remote: /var/www/html/reports/xetabase/${{ inputs.task }}/
          host: ${{ env.SSH_TESTING_SERVER_HOST}}
          port: ${{ env.SSH_TESTING_SERVER_PORT}}
          username: ${{ env.SSH_TESTING_SERVER_USER }}
          password: ${{ env.SSH_TESTING_SERVER_PASSWORD }}
          concurrency: 2


